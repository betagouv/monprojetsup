/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/profil": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getProfilEleve"];
        put?: never;
        post: operations["postProfilEleve"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/referentiel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getReferentielPourInscription"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/metiers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getMetiers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/metiers/recherche/succincte": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getRechercheMetierSuccincte"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/formations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getFormations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/formations/{idformation}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getFormation"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/formations/suggestions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Récupérer les suggestions de formations pour un profil d'élève */
        get: operations["getSuggestionsFormations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/formations/recherche/succincte": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getRechercheFormationSuccincte"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/formations/recherche/detaillee": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getRechercheFormationDetaillee"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator root web endpoint */
        get: operations["links"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator web endpoint 'health' */
        get: operations["health"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/actuator/health/**": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Actuator web endpoint 'health-path' */
        get: operations["health-path"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CommuneDTO: {
            /**
             * @description Code Insee de la ville
             * @example 75015
             */
            codeInsee: string;
            /**
             * @description Dénomination de la ville
             * @example Paris
             */
            nom: string;
            /**
             * Format: double
             * @description Latitude de la ville
             * @example 48.8512252
             */
            latitude: number;
            /**
             * Format: double
             * @description Longitude de la ville
             * @example 2.2885659
             */
            longitude: number;
        };
        ModificationProfilDTO: {
            /**
             * @description Etat d'avancée du projet de l'élève
             * @example aucune_idee
             * @enum {string}
             */
            situation?: "aucune_idee" | "quelques_pistes" | "projet_precis" | "aucune_idee" | "quelques_pistes" | "projet_precis";
            /**
             * @description Classe actuelle
             * @example terminale
             * @enum {string}
             */
            classe?: "seconde" | "premiere" | "terminale" | "seconde" | "premiere" | "terminale";
            /**
             * @description Type de Bac choisi ou envisagé
             * @example Générale
             * @enum {string}
             */
            baccalaureat?: "NC" | "Générale" | "P" | "PA" | "S2TMD" | "ST2S" | "STAV" | "STD2A" | "STHR" | "STI2D" | "STL" | "STMG";
            /**
             * @description Enseignements de spécialité de terminale choisis ou envisagés
             * @example [
             *       "mat707",
             *       "mat700"
             *     ]
             */
            specialites?: string[];
            /**
             * @description Domaines d'activité
             * @example [
             *       "T_ITM_1054",
             *       "T_ITM_1534",
             *       "T_ITM_1248",
             *       "T_ITM_1351"
             *     ]
             */
            domaines?: string[];
            /**
             * @description Centres d'intérêt
             * @example [
             *       "T_ROME_609891024_T_IDEO2_4815",
             *       "T_IDEO2_4822_T_IDEO2_4806",
             *       "T_ROME_731379930_T_IDEO2_4812_T_ROME_803089798",
             *       "T_ROME_2018646295_T_IDEO2_4814"
             *     ]
             */
            centresInterets?: string[];
            /**
             * @description Les idées de métiers de l'élève
             * @example [
             *       "MET_384",
             *       "MET_469"
             *     ]
             */
            metiersFavoris?: string[];
            /**
             * @description Durée envisagée des études
             * @example indifferent
             * @enum {string}
             */
            dureeEtudesPrevue?: "indifferent" | "courte" | "longue" | "aucune_idee" | "indifferent" | "courte" | "longue" | "aucune_idee";
            /**
             * @description Intérêt pour les formations en apprentissage
             * @example pas_interesse
             * @enum {string}
             */
            alternance?: "pas_interesse" | "indifferent" | "interesse" | "tres_interesse" | "pas_interesse" | "indifferent" | "interesse" | "tres_interesse";
            /** @description Villes préférées pour étudier */
            communesFavorites?: components["schemas"]["CommuneDTO"][];
            /**
             * Format: float
             * @description Moyenne générale scolaire estimée en terminale
             * @example 14
             */
            moyenneGenerale?: number;
            /** @description Les idées de formations de l'élève */
            formationsFavorites?: components["schemas"]["VoeuFormationDTO"][];
            /**
             * @description Les formations mises à la corbeille par l'élève
             * @example [
             *       "fl1",
             *       "fl810505"
             *     ]
             */
            corbeilleFormations?: string[];
        };
        VoeuFormationDTO: {
            /**
             * @description Id de la formation
             * @example fl490030
             */
            idFormation: string;
            /**
             * Format: int32
             * @description Niveau de l'ambition du voeux avec 1 = Plan B, 2 = Réaliste et 3 = Ambitieux
             * @example 2
             */
            niveauAmbition: number;
            /**
             * @description Les triplets d'affectation souhaités
             * @example [
             *       "ta15974",
             *       "ta17831"
             *     ]
             */
            tripletsAffectationsChoisis: string[];
            /**
             * @description Prise de note additionnel sur le voeu
             * @example Ma note personnalisée
             */
            priseDeNote?: string;
        };
        Unit: Record<string, never>;
        BaccalaureatAvecSesSpecialitesDTO: {
            baccalaureat: components["schemas"]["BaccalaureatDTO"];
            specialites: components["schemas"]["SpecialitesDTO"][];
        };
        BaccalaureatDTO: {
            id: string;
            nom: string;
        };
        CategorieDomaineAvecDomainesDTO: {
            categorieDomaine: components["schemas"]["CategorieDomaineDTO"];
            domaines: components["schemas"]["DomaineDTO"][];
        };
        CategorieDomaineDTO: {
            id: string;
            nom: string;
            emoji: string;
        };
        CategorieInteretAevcSousCategoriesDTO: {
            categorieInteret: components["schemas"]["InteretCategorieDTO"];
            sousCategoriesInterets: components["schemas"]["InteretSousCategorieDTO"][];
        };
        DomaineDTO: {
            id: string;
            nom: string;
            emoji: string;
        };
        InteretCategorieDTO: {
            id: string;
            nom: string;
            emoji: string;
        };
        InteretSousCategorieDTO: {
            id: string;
            nom: string;
            emoji: string;
        };
        ReferentielDTO: {
            situations: ("aucune_idee" | "quelques_pistes" | "projet_precis")[];
            choixNiveau: ("seconde" | "premiere" | "terminale")[];
            choixAlternance: ("pas_interesse" | "indifferent" | "interesse" | "tres_interesse")[];
            choixDureeEtudesPrevue: ("indifferent" | "courte" | "longue" | "aucune_idee")[];
            baccalaureatsAvecLeurSpecialites: components["schemas"]["BaccalaureatAvecSesSpecialitesDTO"][];
            categoriesDInteretsAvecLeursSousCategories: components["schemas"]["CategorieInteretAevcSousCategoriesDTO"][];
            categoriesDomaineAvecLeursDomaines: components["schemas"]["CategorieDomaineAvecDomainesDTO"][];
        };
        SpecialitesDTO: {
            id: string;
            nom: string;
        };
        FormationCourteDTO: {
            id: string;
            nom: string;
        };
        LienDTO: {
            nom: string;
            url: string;
        };
        LienHateoasDTO: {
            rel: string;
            href: string;
        };
        MetierDTO: {
            id: string;
            nom: string;
            descriptif?: string;
            liens: components["schemas"]["LienDTO"][];
            formations: components["schemas"]["FormationCourteDTO"][];
        };
        MetiersDTO: {
            metiers: components["schemas"]["MetierDTO"][];
            liens: components["schemas"]["LienHateoasDTO"][];
        };
        MetierCourtDTO: {
            id: string;
            nom: string;
        };
        MetiersCourtsDTO: {
            metiers: components["schemas"]["MetierCourtDTO"][];
            liens: components["schemas"]["LienHateoasDTO"][];
        };
        AffiniteSpecialiteDTO: {
            nomSpecialite: string;
            /** Format: int32 */
            pourcentage: number;
        };
        AutoEvaluationMoyenneDTO: {
            /** Format: float */
            moyenne: number;
            /** Format: float */
            basIntervalleNotes: number;
            /** Format: float */
            hautIntervalleNotes: number;
            baccalaureatUtilise: components["schemas"]["BaccalaureatDTO"];
        };
        CentileDTO: {
            /** Format: int32 */
            centile: number;
            /** Format: float */
            note: number;
        };
        CriteresAnalyseCandidatureDTO: {
            nom: string;
            /** Format: int32 */
            pourcentage: number;
        };
        ExplicationGeographiqueDTO: {
            nomVille: string;
            /** Format: int32 */
            distanceKm: number;
        };
        ExplicationsDTO: {
            geographique: components["schemas"]["ExplicationGeographiqueDTO"][];
            formationsSimilaires: components["schemas"]["FormationSimilaireDTO"][];
            /** @enum {string} */
            dureeEtudesPrevue?: "indifferent" | "courte" | "longue" | "aucune_idee";
            /** @enum {string} */
            alternance?: "pas_interesse" | "indifferent" | "interesse" | "tres_interesse";
            interetsEtDomainesChoisis?: components["schemas"]["InteretsEtDomainesDTO"];
            specialitesChoisies: components["schemas"]["AffiniteSpecialiteDTO"][];
            typeBaccalaureat?: components["schemas"]["TypeBaccalaureatDTO"];
            autoEvaluationMoyenne?: components["schemas"]["AutoEvaluationMoyenneDTO"];
        };
        FicheFormationDTO: {
            id: string;
            nom: string;
            idsFormationsAssociees: string[];
            descriptifFormation?: string;
            descriptifDiplome?: string;
            descriptifConseils?: string;
            descriptifAttendus?: string;
            moyenneGeneraleDesAdmis?: components["schemas"]["MoyenneGeneraleDesAdmisDTO"];
            criteresAnalyseCandidature: components["schemas"]["CriteresAnalyseCandidatureDTO"][];
            repartitionAdmisAnneePrecedente?: components["schemas"]["RepartitionAdmisAnneePrecedenteDTO"];
            liens: components["schemas"]["LienDTO"][];
            tripletAffectationAssocies: components["schemas"]["TripletAffectationDTO"][];
            metiers: components["schemas"]["MetierDTO"][];
            /** Format: int32 */
            tauxAffinite?: number;
        };
        FormationAvecExplicationsDTO: {
            formation: components["schemas"]["FicheFormationDTO"];
            explications?: components["schemas"]["ExplicationsDTO"];
        };
        FormationSimilaireDTO: {
            id: string;
            nom: string;
        };
        FormationsAvecExplicationsDTO: {
            formations: components["schemas"]["FormationAvecExplicationsDTO"][];
            liens: components["schemas"]["LienHateoasDTO"][];
        };
        InteretDTO: {
            id: string;
            nom: string;
        };
        InteretsEtDomainesDTO: {
            interets: components["schemas"]["InteretDTO"][];
            domaines: components["schemas"]["DomaineDTO"][];
        };
        MoyenneGeneraleDesAdmisDTO: {
            baccalaureat?: components["schemas"]["BaccalaureatDTO"];
            centiles: components["schemas"]["CentileDTO"][];
        };
        RepartitionAdmisAnneePrecedenteDTO: {
            /** Format: int32 */
            total: number;
            parBaccalaureat: components["schemas"]["TotalAdmisPourUnBaccalaureatDTO"][];
        };
        TotalAdmisPourUnBaccalaureatDTO: {
            baccalaureat: components["schemas"]["BaccalaureatDTO"];
            /** Format: int32 */
            nombreAdmis: number;
        };
        TripletAffectationDTO: {
            id: string;
            nom: string;
            nomCommune: string;
            codeCommune: string;
        };
        TypeBaccalaureatDTO: {
            baccalaureat: components["schemas"]["BaccalaureatDTO"];
            /** Format: int32 */
            pourcentage: number;
        };
        FormationsCourtesDTO: {
            formations: components["schemas"]["FormationCourteDTO"][];
            liens: components["schemas"]["LienHateoasDTO"][];
        };
        Link: {
            href?: string;
            templated?: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getProfilEleve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ModificationProfilDTO"];
                };
            };
        };
    };
    postProfilEleve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ModificationProfilDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Unit"];
                };
            };
        };
    };
    getReferentielPourInscription: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ReferentielDTO"];
                };
            };
        };
    };
    getMetiers: {
        parameters: {
            query: {
                ids: string[];
                /** @description Numéro de page */
                numeroDePage?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["MetiersDTO"];
                };
            };
        };
    };
    getRechercheMetierSuccincte: {
        parameters: {
            query: {
                recherche: string;
                /** @description Numéro de page */
                numeroDePage?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["MetiersCourtsDTO"];
                };
            };
        };
    };
    getFormations: {
        parameters: {
            query: {
                ids: string[];
                /** @description Numéro de page */
                numeroDePage?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FormationsAvecExplicationsDTO"];
                };
            };
        };
    };
    getFormation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                idformation: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FormationAvecExplicationsDTO"];
                };
            };
        };
    };
    getSuggestionsFormations: {
        parameters: {
            query?: {
                /** @description Numéro de page */
                numeroDePage?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FormationsAvecExplicationsDTO"];
                };
            };
        };
    };
    getRechercheFormationSuccincte: {
        parameters: {
            query: {
                /** @description Formation recherchée */
                recherche: string;
                /** @description Numéro de page */
                numeroDePage?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FormationsCourtesDTO"];
                };
            };
        };
    };
    getRechercheFormationDetaillee: {
        parameters: {
            query: {
                /** @description Formation recherchée */
                recherche: string;
                /** @description Numéro de page */
                numeroDePage?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FormationsAvecExplicationsDTO"];
                };
            };
        };
    };
    links: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": {
                        [key: string]: {
                            [key: string]: components["schemas"]["Link"];
                        };
                    };
                    "application/vnd.spring-boot.actuator.v2+json": {
                        [key: string]: {
                            [key: string]: components["schemas"]["Link"];
                        };
                    };
                    "application/json": {
                        [key: string]: {
                            [key: string]: components["schemas"]["Link"];
                        };
                    };
                };
            };
        };
    };
    health: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
                    "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "health-path": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
                    "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
                    "application/json": Record<string, never>;
                };
            };
        };
    };
}
