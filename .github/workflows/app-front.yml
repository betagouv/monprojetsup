name: App Frontend

on:
  push:
    branches:
      - prod
      - demo
  pull_request:
    paths:
      - 'app/front/**'

env:
  WORKING_DIRECTORY: ./app/front

jobs:
  # install:
  #   name: Install packages
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Node and packages
  #       uses: ./.github/actions/setupNodeAndPackages

  #     - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
  #       name: Install npm packages
  #       continue-on-error: true
  #       run: npm ci

  # test:
  #   name: Run tests
  #   needs: install
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Node and packages
  #       uses: ./.github/actions/setupNodeAndPackages

  #     - name: Run test command
  #       run: npm run test

  # lint:
  #   name: Run linters for code
  #   needs: install
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Node and packages
  #       uses: ./.github/actions/setupNodeAndPackages

  #     - name: Run lint command
  #       run: npm run lint
  
  # playwright:
  #   name: Run Playwright tests
  #   needs: [test, lint]
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Node and packages
  #       uses: ./.github/actions/setupNodeAndPackages

  #     - name: Install Playwright
  #       run: npx playwright install --with-deps chromium

  #     - name: Copy .env
  #       run: cp .env.ci .env

  #     - name: Run Playwright tests
  #       run: npx playwright test

  pushToOnisep: 
    name: Push code to ONISEP Repository
    #needs: [playwright]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.GITLAB_ONISEP_SSH_KEY }}

      # - name: Test ecriture
      #   run: mkdir ~/.ssh && echo "lol" > ~/.ssh/ppp

      # - name: Test lecture
      #   run: cat ~/.ssh/ppp

      # - name: Add ONISEP Repository SSH Key
      #   run: echo "${{secrets.GITLAB_ONISEP_SSH_KEY}}" > ~/.ssh/id_rsa 

      # - name: Add ONISEP Repository
      #   run: git remote add onisep ${{vars.GITLAB_ONISEP_REPOSITORY}}
      
      # - name: Add repository to known hosts
      #   run: ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

      # - name: Add repository to known hosts
      #   run: ssh-add ~/.ssh/id_rsa 

      - name: Add repository to known hosts
        run: ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts

      - name: Add ONISEP Repository
        run: git remote add onisep ${{vars.GITLAB_ONISEP_REPOSITORY}}

      - name: Checkout ONISEP Repository
        run: git push onisep HEAD:integration
