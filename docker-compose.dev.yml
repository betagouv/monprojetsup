version: '3.8'

services:
  keycloakdb:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      PGPORT: ${KEYCLOAK_DB_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./keycloak/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./keycloak/db:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    depends_on:
      keycloakdb:
        condition: service_healthy
    environment:
      KC_DB: ${KEYCLOAK_DB_NAME}
      KC_DB_URL: jdbc:postgresql://keycloakdb:${KEYCLOAK_DB_PORT}/${KEYCLOAK_DB_NAME}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      KC_HEALTH_ENABLED: true
    restart: always
    healthcheck:
      test:
        [
          'CMD-SHELL',
          '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8080/health/live'
        ]
      interval: 5s
      timeout: 5s
      retries: 30
    ports:
      - ${KEYCLOAK_PORT_EXPOSED}:${KEYCLOAK_PORT}
    entrypoint: /opt/keycloak/bin/kc.sh start-dev

  appdb:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${APP_DB_NAME}
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      PGPORT: ${APP_DB_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - ${APP_DB_PORT_EXPOSED}:${APP_DB_PORT}
    volumes:
      - ./app/db:/var/lib/postgresql/data
